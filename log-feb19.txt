==6645== Memcheck, a memory error detector
==6645== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==6645== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==6645== Command: ./recover card.raw
==6645== Parent PID: 196
==6645== 
==6645== Conditional jump or move depends on uninitialised value(s)
==6645==    at 0x400AD6: main (recover.c:64)
==6645==  Uninitialised value was created by a heap allocation
==6645==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==6645==    by 0x400AA0: main (recover.c:60)
==6645== 
==6645== Conditional jump or move depends on uninitialised value(s)
==6645==    at 0x400AF0: main (recover.c:64)
==6645==  Uninitialised value was created by a heap allocation
==6645==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==6645==    by 0x400AA0: main (recover.c:60)
==6645== 
==6645== Conditional jump or move depends on uninitialised value(s)
==6645==    at 0x400B0A: main (recover.c:64)
==6645==  Uninitialised value was created by a heap allocation
==6645==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==6645==    by 0x400AA0: main (recover.c:60)
==6645== 
==6645== Conditional jump or move depends on uninitialised value(s)
==6645==    at 0x400B29: main (recover.c:65)
==6645==  Uninitialised value was created by a heap allocation
==6645==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==6645==    by 0x400AA0: main (recover.c:60)
==6645== 
==6645== 
==6645== HEAP SUMMARY:
==6645==     in use at exit: 0 bytes in 0 blocks
==6645==   total heap usage: 7 allocs, 7 frees, 10,832 bytes allocated
==6645== 
==6645== All heap blocks were freed -- no leaks are possible
==6645== 
==6645== For counts of detected and suppressed errors, rerun with: -v
==6645== ERROR SUMMARY: 4 errors from 4 contexts (suppressed: 0 from 0)
